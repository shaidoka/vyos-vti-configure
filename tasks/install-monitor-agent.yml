---
- name: Get the IP of ansible management server
  shell: hostname -I | awk '{print $1}'
  register: ansible_ip
  tags: monitoring

- name: Get Host IP
  set_fact:
    ipaddr: "{{ ansible_host }}"
  tags: monitoring

- name: Configure prometheus-client
  vyos_config:
    lines:
      - set service monitoring telegraf prometheus-client
      - set service monitoring telegraf prometheus-client allow-from "{{ ansible_ip.stdout }}/32"
      - set service monitoring telegraf prometheus-client authentication username "{{ prometheus_username }}"
      - set service monitoring telegraf prometheus-client authentication password "{{ prometheus_password }}"
      - set service monitoring telegraf prometheus-client listen-address "{{ ipaddr }}"
      - set service monitoring telegraf prometheus-client metric-version 2
      - set service monitoring telegraf prometheus-client port "{{ prometheus_port }}"
  tags: monitoring

- name: Install prometheus block
  block:
  - name: Install docker
    apt:
      name: docker.io
      state: present
  
  - name: Create prometheus directory
    file:
      path: /etc/prometheus
      state: directory
    
  - name: Templating prometheus.yml
    template:
      src: templates/prometheus.yml.j2
      dest: /etc/prometheus/prometheus.yml
  
  - name: Check if prometheus container exists
    docker_container_info:
      name: prometheus
    register: prometheus_container_info
    ignore_errors: true
    
  - name: Start prometheus container
    docker_container:
      name: prometheus
      image: prom/prometheus
      state: started
      restart_policy: always
      ports:
        - "9090:9090"
      volumes:
        - /etc/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      env:
        PROMETHEUS_USER: "{{ prometheus_username }}"
        PROMETHEUS_PASSWORD: "{{ prometheus_password }}"
    when: prometheus_container_info | length == 0
  tags: monitoring
  run_once: true
  delegate_to: localhost